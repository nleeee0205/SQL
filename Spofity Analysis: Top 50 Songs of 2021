For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#Finally, I created some analysis questions based on this Spotify data.

#1. What is the average energy by artist and track?
SELECT artist_name, track_name, AVG(energy)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name

#2. Who are the top 5 artists based on popularity?
SELECT track_name, artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 5

#3. What artist released the longest song?
SELECT track_name, artist_name, duration_ms
FROM BIT_DB.Spotifydata
GROUP BY track_name, artist_name
ORDER BY duration_ms desc
LIMIT 1

#4. What's the average danceability for the 10 most popular songs?
SELECT track_name, artist_name, popularity, AVG(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY popularity desc
LIMIT 10

#5. Which artists have songs with a popularity at least 75 or over? 
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
WHERE popularity>=75
GROUP BY artist_name, track_name
ORDER BY popularity desc
